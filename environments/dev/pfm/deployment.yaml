apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pfm
  name: pfm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pfm
  strategy: {}
  template:
    metadata:
      labels:
        app: pfm
    spec:
      containers:
      - image: pahlevani/pfm:v0.0.11-alpha
        name: pfm
        env:
        - name: SECURITY_OAUTH2_JWT_ISSUER_URI
          value: "https://dev-mwye4hxzulrbwabh.us.auth0.com/"
        - name: SWAGGER_OAUTH_AUDIENCE
          valueFrom:
            secretKeyRef:
              name: pfm-secrets
              key: oauth-client-audience
        - name: SWAGGER_OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: pfm-secrets
              key: oauth-client-id
        - name: SWAGGER_OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: pfm-secrets
              key: oauth-client-secret
        - name: JDBC_URL
          valueFrom:
            secretKeyRef:
              name: pfm-postgres-app
              key: jdbc-uri
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: pfm-postgres-app
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pfm-postgres-app
              key: password
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: management
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 9090
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources: {}
